@page "/Breed"

<h1>Breed Management</h1>

<div style="margin-bottom: 15px; display: flex; align-items: center; justify-content: space-between;">
    <div>
        <input type="text" placeholder="Search..."
               style="border-radius: 10px; padding: 5px; width: 250px; border: 1px solid #ccc;" />
        <button style="border-radius: 10px; padding: 5px 15px; background-color: #512bdf; color: white; border: none;">
            Search
        </button>
        <button style="border-radius: 10px; padding: 5px 15px; background-color: #512bdf; color: white; border: none;"
                @onclick="ShowPopup">
            Breed
        </button>
    </div>
</div>

<h2>📜 Breeding History</h2>

<div class="table-responsive">
    <table class="table text-center align-middle">
    <thead>
        <tr>
            <th>Id</th>
            <th>Male</th>
            <th>Female</th>
            <th>Species</th>
            <th>Breed</th>
            <th>Breeding Date</th>
            <th>Expected Birth</th>
            <th>Status</th>
            <th>Information</th>
            <th>Update</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var record in BreedingHistory)
        {
            <tr>
                <td>Id</td>
                <td>@record.Male</td>
                <td>@record.Female</td>
                <td>@record.Species</td>
                <td>@record.Breed</td>
                <td>@record.BreedingDate.ToShortDateString()</td>
                <td>@record.ExpectedBirthDate.ToShortDateString()</td>
                <td>@record.Status</td>
                <td class="text-center"><a href="#">view</a></td>
                <td><a href="#">Update</a></td>
            </tr>
        }
    </tbody>
    </table>
</div>
@* Breed Modal *@
@if (ShowBreedPet)
{
    <div class="custom-modal">
        <div class="modal-content">
            <h3>Breed Pet</h3>

            <label>Species:</label>
            <select class="form-control" @bind="SelectedSpecies">
                <option value="">-- Select Species --</option>
                @foreach (var species in SpeciesBreeds.Keys)
                {
                    <option value="@species">@species</option>
                }
            </select>

            <label>Breed:</label>
            <select class="form-control" @bind="SelectedBreed">
                <option value="">-- Select Breed --</option>
                @foreach (var breed in AvailableBreeds)
                {
                    <option value="@breed">@breed</option>
                }
            </select>

            @* Create a Search Function for available Pet to Breed(Male)*@
            <label>Search Male Pet Name:</label>
            <input type="text" class="form-control" @bind="SelectedMaleName" placeholder="Enter Male Pet Name" />

            @* Create a Search Function for available Pet ro Breed(female)*@
            <label>Search Female Pet Name:</label>
            <input type="text" class="form-control" @bind="SelectedFemaleName" placeholder="Enter Female Pet Name" />

            <label>Breeding Date:</label>
            <input type="date" class="form-control" @bind="BreedingDate" />

            <label>Expected Birth Date:</label>
            <input type="date" class="form-control" @bind="ExpectedBirthDate" />

            <div class="modal-buttons">
                <button class="btn btn-success" @onclick="RecordBreeding">Record Breeding</button>
                <button class="btn btn-secondary" @onclick="CloseModal">Cancel</button>
            </div>
        </div>
    </div>
}

<style>
    .custom-modal {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.5);
        display: flex;
        justify-content: center;
        align-items: center;
    }

    .modal-content {
        background: white;
        padding: 20px;
        border-radius: 10px;
        width: 350px;
        text-align: center;
        box-shadow: 2px 2px 10px rgba(0, 0, 0, 0.2);
    }

    .modal-buttons {
        display: flex;
        justify-content: space-between;
        margin-top: 15px;
    }

    .btn {
        padding: 8px 15px;
        border-radius: 5px;
        border: none;
        cursor: pointer;
    }

    .btn-secondary {
        background-color: gray;
        color: white;
    }

    .btn-success {
        background-color: #28a745;
        color: white;
    }

    .form-control {
        width: 100%;
        padding: 8px;
        margin: 5px 0;
        border-radius: 5px;
        border: 1px solid #ccc;
    }

        .form-control:focus {
            border-color: #512bdf;
            box-shadow: 0 0 5px rgba(81, 43, 223, 0.5);
            outline: none;
        }

    .table td, .table th {
        text-align: center;
        vertical-align: middle;
    }
</style>

@code {
    private bool ShowBreedPet = false;

    private void ShowPopup()
    {
        ShowBreedPet = true;
        StateHasChanged();
    }

    private void CloseModal()
    {
        ShowBreedPet = false;
    }

    private string _selectedSpecies = "";
    private string SelectedSpecies
    {
        get => _selectedSpecies;
        set
        {
            _selectedSpecies = value;
            UpdateBreeds();
        }
    }

    private string SelectedBreed = "";
    private string SelectedMaleName = "";
    private string SelectedFemaleName = "";

    private List<string> AvailableBreeds = new();

    private Dictionary<string, List<string>> SpeciesBreeds = new()
    {
        { "Dog", new List<string> { "Labrador", "Golden Retriever", "Bulldog", "Poodle" } },
        { "Cat", new List<string> { "Persian", "Siamese", "Maine Coon", "Bengal" } },
        { "Bird", new List<string> { "Parrot", "Canary", "Finch", "Cockatoo" } },
        { "Tortoise", new List<string> { "Leopard Tortoise", "Sulcata Tortoise", "Red-Footed Tortoise" } },
        { "Tarantula", new List<string> { "Mexican Red Knee", "Chilean Rose", "Goliath Birdeater" } }
    };

    private void UpdateBreeds()
    {
        if (SpeciesBreeds.ContainsKey(SelectedSpecies))
        {
            AvailableBreeds = new List<string>(SpeciesBreeds[SelectedSpecies]);
        }
        else
        {
            AvailableBreeds = new List<string>();
        }
        SelectedBreed = ""; // Reset breed selection
        StateHasChanged();
    }

    private DateTime BreedingDate = DateTime.Today;
    private DateTime ExpectedBirthDate = DateTime.Today.AddDays(60);

    private List<BreedingRecord> BreedingHistory = new();

    private void RecordBreeding()
    {
        BreedingHistory.Add(new BreedingRecord
            {
                Male = SelectedMaleName,
                Female = SelectedFemaleName,
                Species = SelectedSpecies,
                Breed = SelectedBreed,
                BreedingDate = BreedingDate,
                ExpectedBirthDate = ExpectedBirthDate,
                Status = "Pending"
            });

        CloseModal();
    }

    private class BreedingRecord
    {
        public string Male { get; set; }
        public string Female { get; set; }
        public string Species { get; set; }
        public string Breed { get; set; }
        public DateTime BreedingDate { get; set; }
        public DateTime ExpectedBirthDate { get; set; }
        public string Status { get; set; }
    }


}
